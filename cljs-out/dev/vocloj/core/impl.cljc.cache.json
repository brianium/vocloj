["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$vocloj.core.impl","~:imports",null,"~:requires",["^ ","~$async","~$cljs.core.async","^:","^:","~$p","~$vocloj.protocols","^;","^;"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$speak",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/brian/projects/vocloj/src/cljc/vocloj/core/impl.cljc","~:line",100,"~:column",7,"~:end-line",100,"~:end-column",12,"~:arglists",["~#list",["~$quote",["^H",[["~$synth","~$voice-id","~$utterance"]]]]],"~:doc","Use the given speech synthesizer to speach the given utterance using a voice\n   identified by voice-id"],"^5","~$vocloj.core.impl/speak","^B","src/cljc/vocloj/core/impl.cljc","^F",12,"~:method-params",["^H",[["^J","^K","^L"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^D",1,"~:variadic?",false,"^C",100,"^E",100,"~:max-fixed-arity",3,"~:fn-var",true,"^G",["^H",["^I",["^H",[["^J","^K","^L"]]]]],"^M","Use the given speech synthesizer to speach the given utterance using a voice\n   identified by voice-id"],"~$resume",["^ ","^@",null,"^A",["^ ","^B","/Users/brian/projects/vocloj/src/cljc/vocloj/core/impl.cljc","^C",94,"^D",7,"^E",94,"^F",13,"^G",["^H",["^I",["^H",[["^J"]]]]],"^M","Resume the given speech synthesizer"],"^5","~$vocloj.core.impl/resume","^B","src/cljc/vocloj/core/impl.cljc","^F",13,"^O",["^H",[["^J"]]],"^P",null,"^Q",["^H",[null,null]],"^D",1,"^R",false,"^C",94,"^E",94,"^S",1,"^T",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^M","Resume the given speech synthesizer"],"~$current-state",["^ ","^@",null,"^A",["^ ","^B","/Users/brian/projects/vocloj/src/cljc/vocloj/core/impl.cljc","^C",28,"^D",7,"^E",28,"^F",20,"^G",["^H",["^I",["^H",[["~$sm"]]]]],"^M","Return the current state of the given state machine"],"^5","~$vocloj.core.impl/current-state","^B","src/cljc/vocloj/core/impl.cljc","^F",20,"^O",["^H",[["^X"]]],"^P",null,"^Q",["^H",[null,null]],"^D",1,"^R",false,"^C",28,"~:ret-tag","~$any","^E",28,"^S",1,"^T",true,"^G",["^H",["^I",["^H",[["^X"]]]]],"^M","Return the current state of the given state machine"],"~$init",["^ ","^@",null,"^A",["^ ","^B","/Users/brian/projects/vocloj/src/cljc/vocloj/core/impl.cljc","^C",35,"^D",7,"^E",35,"^F",11,"^G",["^H",["^I",["^H",[["~$initializable"]]]]],"^M","Initialize the given speech recognizer"],"^5","~$vocloj.core.impl/init","^B","src/cljc/vocloj/core/impl.cljc","^F",11,"^O",["^H",[["^11"]]],"^P",null,"^Q",["^H",[null,null]],"^D",1,"^R",false,"^C",35,"^E",35,"^S",1,"^T",true,"^G",["^H",["^I",["^H",[["^11"]]]]],"^M","Initialize the given speech recognizer"],"~$transition",["^ ","^@",null,"^A",["^ ","^B","/Users/brian/projects/vocloj/src/cljc/vocloj/core/impl.cljc","^C",15,"^D",7,"^E",15,"^F",17,"^G",["^H",["^I",["^H",[["^X","~$event","~$payload"],["^X","^14"]]]]],"^M","Transition the given state machine to a new state. The implementation of the state machine\n   should guarantee that only valid transitions are performed.","~:top-fn",["^ ","^R",false,"~:fixed-arity",3,"^S",3,"^O",[["^X","^14","^15"],["^X","^14"]],"^G",["^H",[["^X","^14","^15"],["^X","^14"]]],"^Q",["^H",[null,null]]]],"^5","~$vocloj.core.impl/transition","^B","src/cljc/vocloj/core/impl.cljc","^F",17,"^16",["^ ","^R",false,"^17",3,"^S",3,"^O",[["^X","^14","^15"],["^X","^14"]],"^G",["^H",[["^X","^14","^15"],["^X","^14"]]],"^Q",["^H",[null,null]]],"^O",[["^X","^14","^15"],["^X","^14"]],"^P",null,"^17",3,"^Q",["^H",[null,null]],"^D",1,"^R",false,"~:methods",[["^ ","^17",3,"^R",false],["^ ","^17",2,"^R",false,"~:tag","^["]],"^C",15,"^E",15,"^S",3,"^T",true,"^G",["^H",[["^X","^14","^15"],["^X","^14"]]],"^M","Transition the given state machine to a new state. The implementation of the state machine\n   should guarantee that only valid transitions are performed."],"~$start",["^ ","^@",null,"^A",["^ ","^B","/Users/brian/projects/vocloj/src/cljc/vocloj/core/impl.cljc","^C",43,"^D",7,"^E",43,"^F",12,"^G",["^H",["^I",["^H",[["~$recognizer"]]]]],"^M","Start the given speech recognizer"],"^5","~$vocloj.core.impl/start","^B","src/cljc/vocloj/core/impl.cljc","^F",12,"^O",["^H",[["^1<"]]],"^P",null,"^Q",["^H",[null,null]],"^D",1,"^R",false,"^C",43,"^E",43,"^S",1,"^T",true,"^G",["^H",["^I",["^H",[["^1<"]]]]],"^M","Start the given speech recognizer"],"~$add-effect",["^ ","^@",null,"^A",["^ ","^B","/Users/brian/projects/vocloj/src/cljc/vocloj/core/impl.cljc","^C",6,"^D",7,"^E",6,"^F",17,"^G",["^H",["^I",["^H",[["^X","~$key","~$fn-3"],["^X","^1?","~$from","~$to","^1@"]]]]],"^16",["^ ","^R",false,"^17",5,"^S",5,"^O",[["^X","^1?","^1@"],["^X","^1?","^1A","^1B","^1@"]],"^G",["^H",[["^X","^1?","^1@"],["^X","^1?","^1A","^1B","^1@"]]],"^Q",["^H",[null,null]]]],"^5","~$vocloj.core.impl/add-effect","^B","src/cljc/vocloj/core/impl.cljc","^F",17,"^16",["^ ","^R",false,"^17",5,"^S",5,"^O",[["^X","^1?","^1@"],["^X","^1?","^1A","^1B","^1@"]],"^G",["^H",[["^X","^1?","^1@"],["^X","^1?","^1A","^1B","^1@"]]],"^Q",["^H",[null,null]]],"^O",[["^X","^1?","^1@"],["^X","^1?","^1A","^1B","^1@"]],"^P",null,"^17",5,"^Q",["^H",[null,null]],"^D",1,"^R",false,"^19",[["^ ","^17",3,"^R",false],["^ ","^17",5,"^R",false,"^1:","^["]],"^C",6,"^E",6,"^S",5,"^T",true,"^G",["^H",[["^X","^1?","^1@"],["^X","^1?","^1A","^1B","^1@"]]]],"~$stop",["^ ","^@",null,"^A",["^ ","^B","/Users/brian/projects/vocloj/src/cljc/vocloj/core/impl.cljc","^C",49,"^D",7,"^E",49,"^F",11,"^G",["^H",["^I",["^H",[["^1<"]]]]],"^M","Stop the given speech recognizer"],"^5","~$vocloj.core.impl/stop","^B","src/cljc/vocloj/core/impl.cljc","^F",11,"^O",["^H",[["^1<"]]],"^P",null,"^Q",["^H",[null,null]],"^D",1,"^R",false,"^C",49,"^E",49,"^S",1,"^T",true,"^G",["^H",["^I",["^H",[["^1<"]]]]],"^M","Stop the given speech recognizer"],"~$listen",["^ ","^@",null,"^A",["^ ","^B","/Users/brian/projects/vocloj/src/cljc/vocloj/core/impl.cljc","^C",55,"^D",7,"^E",55,"^F",13,"^G",["^H",["^I",["^H",[["^1<"],["^1<","~$handler"]]]]],"^M","A shortcut for calling init then start on the given speech recognizer.\n   \n   When called with one argument, the recognizer is initialized then started\n   and the underlying result channel is returned.\n   \n   When called with two arguments, speech results will be passed to the given function\n   as they are made available.","^16",["^ ","^R",false,"^17",2,"^S",2,"^O",[["^1<"],["^1<","^1G"]],"^G",["^H",[["^1<"],["^1<","^1G"]]],"^Q",["^H",[null,null]]]],"^5","~$vocloj.core.impl/listen","^B","src/cljc/vocloj/core/impl.cljc","^F",13,"^16",["^ ","^R",false,"^17",2,"^S",2,"^O",[["^1<"],["^1<","^1G"]],"^G",["^H",[["^1<"],["^1<","^1G"]]],"^Q",["^H",[null,null]]],"^O",[["^1<"],["^1<","^1G"]],"^P",null,"^17",2,"^Q",["^H",[null,null]],"^D",1,"^R",false,"^19",[["^ ","^17",1,"^R",false,"^1:","^["],["^ ","^17",2,"^R",false]],"^C",55,"^E",55,"^S",2,"^T",true,"^G",["^H",[["^1<"],["^1<","^1G"]]],"^M","A shortcut for calling init then start on the given speech recognizer.\n   \n   When called with one argument, the recognizer is initialized then started\n   and the underlying result channel is returned.\n   \n   When called with two arguments, speech results will be passed to the given function\n   as they are made available."],"~$pause",["^ ","^@",null,"^A",["^ ","^B","/Users/brian/projects/vocloj/src/cljc/vocloj/core/impl.cljc","^C",88,"^D",7,"^E",88,"^F",12,"^G",["^H",["^I",["^H",[["^J"]]]]],"^M","Pause the given speech synthesizer"],"^5","~$vocloj.core.impl/pause","^B","src/cljc/vocloj/core/impl.cljc","^F",12,"^O",["^H",[["^J"]]],"^P",null,"^Q",["^H",[null,null]],"^D",1,"^R",false,"^C",88,"^E",88,"^S",1,"^T",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^M","Pause the given speech synthesizer"],"~$cancel",["^ ","^@",null,"^A",["^ ","^B","/Users/brian/projects/vocloj/src/cljc/vocloj/core/impl.cljc","^C",82,"^D",7,"^E",82,"^F",13,"^G",["^H",["^I",["^H",[["^J"]]]]],"^M","Cancel the given speech synthesizer"],"^5","~$vocloj.core.impl/cancel","^B","src/cljc/vocloj/core/impl.cljc","^F",13,"^O",["^H",[["^J"]]],"^P",null,"^Q",["^H",[null,null]],"^D",1,"^R",false,"^C",82,"^E",82,"^S",1,"^T",true,"^G",["^H",["^I",["^H",[["^J"]]]]],"^M","Cancel the given speech synthesizer"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^9","^:","^:","^:"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:recur","~:state","~:stop-ch","~:speech-ch","~:last-event","~:data"]],"~:order",["^1R","^1U","^1T","^1V","^1S","^1Q"]],"^M",null]